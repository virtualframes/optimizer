[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "optimizer"
version = "0.1.0"
description = "Augmented optimizer for virtual node and game-engine authentication matrix simulation."
readme = "README.md"
authors = [{name = "Jules"}]
license = {text = "MIT License"}
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
]
dependencies = [
    "fastapi",
    "uvicorn[standard]",
    "pydantic",
    "pyyaml",
    "click",
    "pybullet",
    "networkx",
    "pathspec>=0.12.1",
    "requests>=2.32",
    "beautifulsoup4>=4.12",
]

[project.optional-dependencies]
dev = [
    "pytest",
    "flake8",
    "httpx",
    "temporalio",
    "openai",
    "pytest-asyncio",
    "pymilvus",
]
atlas = [
    "PyYAML>=6.0.2",
    "pathspec>=0.12.1",
    "requests>=2.32",
    "beautifulsoup4>=4.12",
]
neo4j = ["neo4j"]

[project.scripts]
optimizer = "optimizer.cli.main:cli"
map-tree = "optimizer.research.tree_mapper:main"
api-map = "optimizer.apiatlas.cli:map_main"
api-health = "optimizer.apiatlas.cli:health_main"
api-heal = "optimizer.apiatlas.cli:heal_main"
api-debug = "optimizer.apiatlas.cli:debug_main"
jules-export-neo4j = "optimizer.memory.neo4j_export:main"
jules-service-overlay = "optimizer.dev.service_route_overlay:main"
jules-risk-scan = "optimizer.analytics.risk_classifiers:main"